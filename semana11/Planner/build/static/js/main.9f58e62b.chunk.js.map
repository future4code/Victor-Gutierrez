{"version":3,"sources":["Global/global_styles.tsx","Components/TaskCreator/taskcreator_styles.tsx","Components/Header/header_styles.tsx","Assets/json/days.ts","Services/planner.ts","Components/TaskCreator/taskcreator_services.ts","Context/smartReload/smartReload.ts","Components/TaskCreator/taskcreator.tsx","Components/Header/header.tsx","Hooks/useTask.tsx","Components/Day/day_styles.tsx","Components/TodoItem/todoitem_styles.tsx","Components/TodoItem/todoitem_services.ts","Components/TodoItem/todoitem.tsx","Components/Day/day.tsx","Components/Week/week_styles.tsx","Components/Week/week.tsx","Context/smartReload/provider.tsx","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","Container","styled","div","header","ContainerFromTaskCreator","days","planner","axios","create","baseURL","createTask","task","a","post","then","toast","success","catch","error","console","smartReloadContext","createContext","TaskCreator","useState","text","done","setTask","Load","useContext","handleInput","e","target","value","id","handleSubmit","preventDefault","onSubmit","htmlFor","required","data-testid","onChange","type","placeholder","map","item","key","Header","useTasks","tasks","setTasks","reloadSwitch","useEffect","getTasks","get","response","data","TaskBox","li","TaskText","p","props","completion","CompleteButton","button","deleteTask","delete","completeTask","put","editTask","newText","TodoItem","editMode","setEditMode","editContent","setEditContent","handleDelete","handleComplete","sendEdit","onKeyDown","Number","keyCode","minLength","onClick","Day","day","main","Week","SmartReloadProvider","children","setReloadSwitch","Provider","prev","App","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"i2KAEA,IA4EeA,EA5EKC,YAAH,K,umBCAV,IAAMC,EAAYC,IAAOC,IAAV,K,kgBCCf,IAAMF,EAAYC,IAAOE,OAAV,IAoBlBC,G,6CCvBSC,EAAW,CAChB,UACA,gBACA,iBACA,eACA,eACA,cACA,a,QCAOC,E,OALCC,EAAMC,OAAO,CAC3BC,QACE,6F,OCASC,EAAU,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEAClBN,EAAQO,KAAK,GAAIF,GAAMG,MAAK,WAChCC,IAAMC,QAAQ,iCACbC,OAAM,SAACC,GACRC,QAAQD,MAAMA,GACdH,IAAMG,MAAM,mDALU,2CAAH,sDCDVE,EAAqBC,wBAAc,ICqEjCC,EAjEK,WAAO,IAAD,EACAC,mBAAQ,2BAC1B,IAD0B,IAE9BC,KAAM,GACNC,MAAM,KAJgB,mBACjBd,EADiB,KACXe,EADW,KAOhBC,EAASC,qBAAWR,GAApBO,KACFE,EAAc,SAClBC,GAGI,IAAD,EACmBA,EAAEC,OAAhBC,EADL,EACKA,MAAOC,EADZ,EACYA,GACfP,EAAQ,2BAAKf,GAAN,kBAAasB,EAAKD,MAGrBE,EAAY,uCAAG,WAAOJ,GAAP,SAAAlB,EAAA,6DACnBkB,EAAEK,iBADiB,SAEbzB,EAAWC,GACdG,MAAK,WACJY,EAAQ,2BAAKf,GAAN,IAAYa,KAAM,MACzBG,OAEDV,OAAM,WACLS,EAAQ,2BAAKf,GAAN,IAAYa,KAAM,SARV,2CAAH,sDAYlB,OACE,kBAACxB,EAAD,KACE,+CACA,0BAAMoC,SAAUF,GACd,2BAAOG,QAAQ,OAAf,kBACA,2BACEC,UAAQ,EACRC,cAAY,aACZC,SAAUX,EACVY,KAAK,OACLR,GAAG,OACHD,MAAOrB,EAAKa,KACZkB,YAAY,mBAEd,2BAAOL,QAAQ,OAAf,iBACA,4BACEE,cAAY,YACZD,UAAQ,EACRE,SAAUX,EACVI,GAAG,OAEH,4BAAQD,MAAM,IAAd,mBACC3B,EAAKsC,KAAI,SAACC,GAAD,OACR,4BAAQC,IAAKD,EAAMZ,MAAOY,GACvBA,OAIP,4BAAQL,cAAY,eAAeE,KAAK,UAAxC,mBChDOK,EAZA,WACb,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,6BACE,wBAAIP,cAAY,QAAhB,WACA,8DCiBOQ,EAtBE,WAAO,IAAD,EACKxB,mBAAiB,IADtB,mBACdyB,EADc,KACPC,EADO,KAEbC,EAAiBtB,qBAAWR,GAA5B8B,aAERC,qBAAU,WACRC,MACC,CAACF,IAEJ,IAAME,EAAQ,uCAAG,sBAAAxC,EAAA,sEACTN,EACH+C,IAAI,KACJvC,MAAK,SAACwC,GACLL,EAASK,EAASC,SAEnBtC,OAAM,SAACC,GACNC,QAAQD,MAAMA,MAPH,2CAAH,qDAWd,MAAO,CAAC8B,I,gwBCtBH,IAAMhD,EAAYC,IAAOC,IAAV,K,ioBCCf,IAAMsD,EAAUvD,IAAOwD,GAAV,KAoBPC,EAAWzD,IAAO0D,EAAV,KACV,SAACC,GAAD,OAAYA,EAAMC,WAAa,OAAS,WAC9B,SAACD,GAAD,OAAYA,EAAMC,WAAa,eAAiB,UAMxDC,EAAiB7D,IAAO8D,OAAV,KACL,SAACH,GAAD,OAAYA,EAAMC,WAAa,UAAY,WACtD,SAACD,GAAD,OAAYA,EAAMC,WAAa,QAAU,WC9BvCG,EAAU,uCAAG,WAAO/B,GAAP,SAAArB,EAAA,sEAClBN,EAAQ2D,OAAR,WAAmBhC,IAAMnB,MAAK,kBAAOC,IAAMC,QAAQ,kCAAgCC,OAAM,SAACC,GAC1FC,QAAQD,MAAMA,MAFI,2CAAH,sDAMVgD,EAAY,uCAAG,WAAOjC,GAAP,SAAArB,EAAA,sEACpBN,EAAQ6D,IAAR,WAAgBlC,GAAM,CAAER,MAAM,IAAQX,MAAK,kBAAMC,IAAMC,QAAQ,uBAAqBC,OAAM,SAACC,GAC/FC,QAAQD,MAAMA,MAFU,2CAAH,sDAMZkD,EAAQ,uCAAG,WAAOnC,EAAYoC,GAAnB,SAAAzD,EAAA,sEAChBN,EAAQ6D,IAAR,WAAgBlC,GAAM,CAAET,KAAM6C,IAAWvD,MAAK,kBAAMC,IAAMC,QAAQ,sBAAoBC,OAAM,SAACC,GACjGC,QAAQD,MAAMA,MAFM,2CAAH,wDCiENoD,EAzEE,SAAC,GAAuC,IAArC9C,EAAoC,EAApCA,KAAMS,EAA8B,EAA9BA,GAAIR,EAA0B,EAA1BA,KAA0B,EACtBF,oBAAkB,GADI,mBAC/CgD,EAD+C,KACrCC,EADqC,OAEhBjD,mBAAiB,IAFD,mBAE/CkD,EAF+C,KAElCC,EAFkC,KAG9C/C,EAASC,qBAAWR,GAApBO,KAQFgD,EAAY,uCAAG,WAAO1C,GAAP,SAAArB,EAAA,sEACboD,EAAW/B,GAAInB,MAAK,WACxBa,OAFiB,2CAAH,sDAMZiD,EAAc,uCAAG,sBAAAhE,EAAA,0DACR,IAATa,EADiB,gCAEbyC,EAAajC,GAAInB,MAAK,WAC1Ba,OAHiB,2CAAH,qDAYdkD,EAAQ,uCAAG,WAAO/C,GAAP,SAAAlB,EAAA,6DACfkB,EAAEK,iBADa,SAETiC,EAASnC,EAAIwC,GAAa3D,MAAK,WACnCa,IACA+C,EAAe,OAJF,2CAAH,sDAQd,OACE,kBAAClB,EAAD,CAASjB,cAAY,WAAWuC,UAAW,SAAChD,GAhCd,KAA1BiD,OAgC4DjD,EAhC/CkD,UACfR,GAAY,KAgCZ,kBAACd,EAAD,CAAUG,WAAYpC,GAAOD,IAEf,IAAb+C,IAA8B,IAAT9C,EACpB,oCACE,0BAAMW,SAAUyC,GACd,2BACEvC,UAAQ,EACR2C,UAAW,EACXzC,SAtBO,SAACV,GAClB4C,EAAe5C,EAAEC,OAAOC,QAsBdU,YAAY,4BACZD,KAAK,OACLT,MAAOyC,IAET,4BAAQhC,KAAK,UAAb,WAEF,4BAAQyC,QAAS,kBAAMV,GAAY,KAAnC,aAGF,oCACE,kBAACV,EAAD,CAAgBoB,QAASN,EAAgBf,WAAYpC,GAClDA,EAAO,sBAAwB,aAEhCA,EAGA,qCAFA,4BAAQyD,QAAS,kBAAMV,GAAY,KAAnC,UAIF,4BAAQU,QAAS,kBAAMP,EAAa1C,KAApC,cC7CKkD,EAtBH,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,IAAoB,EACjBrC,IAATC,EAD0B,oBAGjC,OACE,kBAAC,EAAD,KACE,wBAAIT,cAAY,aAAa6C,GAC5BpC,EAAML,KAAI,SAACC,GAAD,OACTA,EAAKwC,MAAQA,EACX,kBAAC,EAAD,CACEnD,GAAIW,EAAKX,GACTT,KAAMoB,EAAKpB,KACXqB,IAAKD,EAAKX,GACVR,KAAMmB,EAAKnB,OAGb,0C,qMCnBH,IAAMzB,EAAYC,IAAOoF,KAAV,KCaPC,EAVF,WACX,OACE,kBAAC,EAAD,CAAW/C,cAAY,iBACpBlC,EAAKsC,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,CAAKC,IAAKD,EAAMwC,IAAKxC,SCSd2C,EAda,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAA8B,EACnBjE,mBAAiB,GADE,mBACpD2B,EADoD,KACtCuC,EADsC,KAO3D,OACE,kBAACrE,EAAmBsE,SAApB,CAA6B1D,MAAO,CAAEkB,eAAcvB,KALzC,WACX8D,GAAgB,SAACE,GAAD,OAAUA,EAAO,QAK9BH,I,MCQQI,MAbf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAgBC,SAAS,iBACzB,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCXRC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.9f58e62b.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n    font-family: 'Raleway', sans-serif;\n  }\n\n  body {\n     -webkit-font-smoothing: antialiased;\n     background-color: #cc5577;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' viewBox='0 0 100 60'%3E%3Cg %3E%3Crect fill='%23cc5577' width='11' height='11'/%3E%3Crect fill='%23ce5776' x='10' width='11' height='11'/%3E%3Crect fill='%23d05a76' y='10' width='11' height='11'/%3E%3Crect fill='%23d15c75' x='20' width='11' height='11'/%3E%3Crect fill='%23d35f74' x='10' y='10' width='11' height='11'/%3E%3Crect fill='%23d46174' y='20' width='11' height='11'/%3E%3Crect fill='%23d66473' x='30' width='11' height='11'/%3E%3Crect fill='%23d76673' x='20' y='10' width='11' height='11'/%3E%3Crect fill='%23d96972' x='10' y='20' width='11' height='11'/%3E%3Crect fill='%23da6c72' y='30' width='11' height='11'/%3E%3Crect fill='%23db6e71' x='40' width='11' height='11'/%3E%3Crect fill='%23dc7171' x='30' y='10' width='11' height='11'/%3E%3Crect fill='%23dd7471' x='20' y='20' width='11' height='11'/%3E%3Crect fill='%23de7671' x='10' y='30' width='11' height='11'/%3E%3Crect fill='%23df7971' y='40' width='11' height='11'/%3E%3Crect fill='%23e07c71' x='50' width='11' height='11'/%3E%3Crect fill='%23e17e71' x='40' y='10' width='11' height='11'/%3E%3Crect fill='%23e28171' x='30' y='20' width='11' height='11'/%3E%3Crect fill='%23e38471' x='20' y='30' width='11' height='11'/%3E%3Crect fill='%23e38771' x='10' y='40' width='11' height='11'/%3E%3Crect fill='%23e48972' y='50' width='11' height='11'/%3E%3Crect fill='%23e58c72' x='60' width='11' height='11'/%3E%3Crect fill='%23e58f73' x='50' y='10' width='11' height='11'/%3E%3Crect fill='%23e69173' x='40' y='20' width='11' height='11'/%3E%3Crect fill='%23e69474' x='30' y='30' width='11' height='11'/%3E%3Crect fill='%23e79775' x='20' y='40' width='11' height='11'/%3E%3Crect fill='%23e79a75' x='10' y='50' width='11' height='11'/%3E%3Crect fill='%23e89c76' x='70' width='11' height='11'/%3E%3Crect fill='%23e89f77' x='60' y='10' width='11' height='11'/%3E%3Crect fill='%23e8a278' x='50' y='20' width='11' height='11'/%3E%3Crect fill='%23e9a47a' x='40' y='30' width='11' height='11'/%3E%3Crect fill='%23e9a77b' x='30' y='40' width='11' height='11'/%3E%3Crect fill='%23e9aa7c' x='20' y='50' width='11' height='11'/%3E%3Crect fill='%23e9ac7e' x='80' width='11' height='11'/%3E%3Crect fill='%23eaaf7f' x='70' y='10' width='11' height='11'/%3E%3Crect fill='%23eab281' x='60' y='20' width='11' height='11'/%3E%3Crect fill='%23eab482' x='50' y='30' width='11' height='11'/%3E%3Crect fill='%23eab784' x='40' y='40' width='11' height='11'/%3E%3Crect fill='%23eaba86' x='30' y='50' width='11' height='11'/%3E%3Crect fill='%23ebbc88' x='90' width='11' height='11'/%3E%3Crect fill='%23ebbf8a' x='80' y='10' width='11' height='11'/%3E%3Crect fill='%23ebc18c' x='70' y='20' width='11' height='11'/%3E%3Crect fill='%23ebc48e' x='60' y='30' width='11' height='11'/%3E%3Crect fill='%23ebc790' x='50' y='40' width='11' height='11'/%3E%3Crect fill='%23ebc992' x='40' y='50' width='11' height='11'/%3E%3Crect fill='%23ebcc94' x='90' y='10' width='11' height='11'/%3E%3Crect fill='%23ebce97' x='80' y='20' width='11' height='11'/%3E%3Crect fill='%23ebd199' x='70' y='30' width='11' height='11'/%3E%3Crect fill='%23ecd39c' x='60' y='40' width='11' height='11'/%3E%3Crect fill='%23ecd69e' x='50' y='50' width='11' height='11'/%3E%3Crect fill='%23ecd8a1' x='90' y='20' width='11' height='11'/%3E%3Crect fill='%23ecdba4' x='80' y='30' width='11' height='11'/%3E%3Crect fill='%23ecdda6' x='70' y='40' width='11' height='11'/%3E%3Crect fill='%23ece0a9' x='60' y='50' width='11' height='11'/%3E%3Crect fill='%23ede2ac' x='90' y='30' width='11' height='11'/%3E%3Crect fill='%23ede4af' x='80' y='40' width='11' height='11'/%3E%3Crect fill='%23ede7b2' x='70' y='50' width='11' height='11'/%3E%3Crect fill='%23ede9b5' x='90' y='40' width='11' height='11'/%3E%3Crect fill='%23eeecb8' x='80' y='50' width='11' height='11'/%3E%3Crect fill='%23EEB' x='90' y='50' width='11' height='11'/%3E%3C/g%3E%3C/svg%3E\");\n  background-attachment: fixed;\n  background-size: cover;\n      }\n\n button {\ncolor: black;\nbackground-color: white;\nborder: 1px solid #d05a76;\nborder-radius: 4px;\ncursor: pointer;\nheight:32px;\nfont-size:14px;\nbox-shadow: 0 0 4px #999;\nbackground-position: center;\ntransition: background 0.8s;\n}\n\nbutton:hover {\nbackground:#d05a76 radial-gradient(circle, transparent 1%, #d05a76 1%) center/15000%;\ncolor: white;\n}\n\nbutton:active{\nbackground-color:#292d3e;\nbackground-size: 100%;\ntransition: background 0s;\n}\n\nbutton:disabled{\nbackground-color:gray;\n\n}\n\nbutton:disabled:hover {\n  background-color:gray;\n}\n  \n.Toastify__toast--success {\n  background: #d05a76 ;\n  border-radius: 10px 10px 0px 10px;\n }\n\n input, select{\n   padding: 3px 5px;\n   border-radius: 5px;\n   border: 0.5px dashed #d05a76; \n   box-shadow: 2.5px 2.5px 1px #0000003b;\n   margin: 2.5px 0 5px 0;\n   background: white\n }\n\n option{\n   background: white;\n   text-align: center;\n   border: none;\n }\n\n\n  \n  \n  `;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 15px;\n  height: 230px;\n  width: 300px;\n  background: white;\n  border: 2px dashed #d05a76;\n  padding: 10px 10px;\n\n  z-index: 2;\n  text-align: center;\n  border-radius: 2px 30px 30px 30px;\n\n  h5 {\n    color: black;\n    margin-bottom: 10px;\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n\n    label {\n      color: black;\n      margin-top: 5px;\n      margin-bottom: 5px;\n    }\n\n    button {\n      margin-top: 15px;\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { Container as ContainerFromTaskCreator } from '../TaskCreator/taskcreator_styles';\n\nexport const Container = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 250px;\n  width: 100%;\n  color: black;\n  background: #d05a76;\n\n  div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    align-self: center;\n    flex: 3;\n    text-align: center;\n    color: white;\n  }\n\n  ${ContainerFromTaskCreator} {\n    flex: 1;\n    position: sticky;\n    top: 1px;\n    bottom: 10px;\n  }\n`;\n","export const days =     [\n        'Domingo',\n        'Segunda-feira',\n        'Terça-feira',\n        'Quarta-feira',\n        'Quinta-feira',\n        'Sexta-feira',\n        'Sábado',\n      ];\n","import axios from 'axios';\n\nconst planner = axios.create({\n  baseURL:\n    'https://us-central1-labenu-apis.cloudfunctions.net/generic/planner-mello-victorgutierrez',\n});\n\nexport default planner;\n","import { Task } from '../../Types';\nimport planner from '../../Services/planner';\nimport { toast } from 'react-toastify';\n\nexport const createTask = async (task: Task) => {\n  await planner.post('', task).then(() => {\n    toast.success(\"Tarefa criada com sucesso!\")\n  }).catch((error) => {\n    console.error(error);\n    toast.error(\"Houve um erro na criação da sua tarefa\")\n  });\n};\n","import { createContext } from 'react';\nimport { IsmartReloadContext } from '../../Types/index';\n\nexport const smartReloadContext = createContext({} as IsmartReloadContext);\n\n","import React, { useState, useContext } from 'react';\nimport { Task } from '../../Types';\nimport { days } from '../../Assets/json/days';\nimport { createTask } from './taskcreator_services';\nimport { Container } from './taskcreator_styles';\nimport { smartReloadContext } from '../../Context/smartReload/smartReload';\n\nconst TaskCreator = () => {\n  const [task, setTask] = useState<Task>({\n    ...({} as Task),\n    text: '',\n    done: false,\n  });\n  \n  const { Load } = useContext(smartReloadContext);\n  const handleInput = (\n    e:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    const { value, id } = e.target;\n    setTask({ ...task, [id]: value });\n  };\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    await createTask(task)\n      .then(() => {\n        setTask({ ...task, text: '' });\n        Load();\n      })\n      .catch(() => {\n        setTask({ ...task, text: '' });\n      });\n  };\n\n  return (\n    <Container>\n      <h5>Crie sua tarefa</h5>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"day\">Nome da tarefa</label>\n        <input\n          required\n          data-testid=\"task-input\"\n          onChange={handleInput}\n          type=\"text\"\n          id=\"text\"\n          value={task.text}\n          placeholder=\"Insira um nome\"\n        />\n        <label htmlFor=\"day\">Dia da tarefa</label>\n        <select\n          data-testid=\"day-input\"\n          required\n          onChange={handleInput}\n          id=\"day\"\n        >\n          <option value=\"\">Selecione o dia</option>\n          {days.map((item) => (\n            <option key={item} value={item}>\n              {item}\n            </option>\n          ))}\n        </select>\n        <button data-testid=\"createButton\" type=\"submit\">\n          Criar Tarefa\n        </button>\n      </form>\n    </Container>\n  );\n};\n\nexport default TaskCreator;\n","import React from 'react';\nimport { Container } from './header_styles';\nimport TaskCreator from '../TaskCreator/taskcreator';\n\nconst Header = () => {\n  return (\n    <Container>\n      <TaskCreator />\n      <div>\n        <h1 data-testid=\"logo\">Planner</h1>\n        <p>A way to keep your schedules</p>\n      </div>\n    </Container>\n  );\n};\n\nexport default Header;\n","import { useState, useEffect, useContext } from 'react';\nimport { Task } from '../Types';\nimport planner from '../Services/planner';\nimport { smartReloadContext } from '../Context/smartReload/smartReload';\n\nconst useTasks = () => {\n  const [tasks, setTasks] = useState<Task[]>([] as Task[]);\n  const { reloadSwitch } = useContext(smartReloadContext);\n\n  useEffect(() => {\n    getTasks();\n  }, [reloadSwitch]);\n\n  const getTasks = async () => {\n    await planner\n      .get('/')\n      .then((response) => {\n        setTasks(response.data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  return [tasks];\n};\n\nexport default useTasks;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 20px;\n  height: 300px;\n  width: 300px;\n  border-bottom: 5px dashed white;\n  list-style: none;\n  text-align: center;\n  break-before: auto;\n  word-break: break-word;\n  overflow-y: scroll;\n  border-radius: 5px;\n\n  ::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  ::-webkit-scrollbar-track {\n    display: none;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    display: none;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    display: none;\n  }\n\n  h1 {\n    font-size: 20px;\n    text-align: center;\n    padding: 5px;\n    margin-bottom: 10px;\n    position: sticky;\n    top: 0px;\n    background: white;\n    border-radius: 5px;\n  }\n`;\n","import styled from 'styled-components';\nimport { TodoItemTextProps } from '../../Types/index';\n\nexport const TaskBox = styled.li`\n  width: 80%;\n  height: auto;\n  padding: 10px;\n  border-radius: 5px;\n  word-break: break-word;\n  margin: 10px auto;\n  display: flex;\n  flex-direction: column;\n  background: bisque;\n\n  input::placeholder {\n    text-align: center;\n  }\n\n  form > button {\n    width: 100%;\n  }\n`;\n\nexport const TaskText = styled.p<TodoItemTextProps>`\n  color: ${(props) => (props.completion ? 'gray' : 'black')};\n  text-decoration: ${(props) => (props.completion ? 'line-through' : 'none')};\n  padding: 10px 5px;\n\n  text-decoration-color: black;\n`;\n\nexport const CompleteButton = styled.button<TodoItemTextProps>`\n  background-color: ${(props) => (props.completion ? '#d05a76' : 'white')};\n  color: ${(props) => (props.completion ? 'white' : 'black')};\n`;\n","import planner from '../../Services/planner';\nimport { toast } from 'react-toastify';\n\nexport const deleteTask = async (id: string) => {\n  await planner.delete(`/${id}`).then(() =>  toast.success(\"Tarefa deletada com sucesso\")).catch((error) => {\n        console.error(error)\n    })\n}\n\nexport const completeTask = async (id: string) => {\n  await planner.put(`/${id}`, { done: true }).then(() => toast.success(\"Tarefa completa!\")).catch((error) => {\n    console.error(error)\n  })\n}\n\nexport const editTask = async (id: string, newText: string) => {\n  await planner.put(`/${id}`, { text: newText }).then(() => toast.success(\"Tarefa editada!\")).catch((error) => {\n    console.error(error)\n  })\n}","import React from 'react';\nimport { TaskBox, TaskText, CompleteButton } from './todoitem_styles';\nimport { useState, useContext } from 'react';\nimport { deleteTask, completeTask, editTask } from './todoitem_services';\nimport { TodoItemProps } from '../../Types';\nimport { smartReloadContext } from '../../Context/smartReload/smartReload';\n\nconst TodoItem = ({ text, id, done }: TodoItemProps) => {\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const [editContent, setEditContent] = useState<string>('');\n  const { Load } = useContext(smartReloadContext);\n\n  const closeEditMode = (event: React.KeyboardEvent) => {\n    if (Number(event.keyCode) === 27) {\n      setEditMode(false);\n    }\n  };\n\n  const handleDelete = async (id: string) => {\n    await deleteTask(id).then(() => {\n      Load();\n    });\n  };\n\n  const handleComplete = async () => {\n    if (done !== true) {\n      await completeTask(id).then(() => {\n        Load();\n      });\n    }\n  };\n\n  const handleEdit = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEditContent(e.target.value);\n  };\n\n  const sendEdit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    await editTask(id, editContent).then(() => {\n      Load();\n      setEditContent('');\n    });\n  };\n\n  return (\n    <TaskBox data-testid=\"task-box\" onKeyDown={(e) => closeEditMode(e)}>\n      <TaskText completion={done}>{text}</TaskText>\n\n      {editMode === true && done === false ? (\n        <>\n          <form onSubmit={sendEdit}>\n            <input\n              required\n              minLength={3}\n              onChange={handleEdit}\n              placeholder=\"Insira o novo conteúdo\"\n              type=\"text\"\n              value={editContent}\n            />\n            <button type=\"submit\">Enviar</button>\n          </form>\n          <button onClick={() => setEditMode(false)}>Cancelar</button>\n        </>\n      ) : (\n        <>\n          <CompleteButton onClick={handleComplete} completion={done}>\n            {done ? 'Atividade Completa!' : 'Completar'}\n          </CompleteButton>\n          {!done ? (\n            <button onClick={() => setEditMode(true)}>Editar</button>\n          ) : (\n            <></>\n          )}\n          <button onClick={() => handleDelete(id)}>Deletar</button>\n        </>\n      )}\n    </TaskBox>\n  );\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport { DayProps, Task } from '../../Types';\nimport useTasks from '../../Hooks/useTask';\nimport { Container } from '../Day/day_styles';\nimport TodoItem from '../TodoItem/todoitem';\n\nconst Day = ({ day }: DayProps) => {\n  const [tasks] = useTasks();\n\n  return (\n    <Container>\n      <h1 data-testid=\"day-title\">{day}</h1>\n      {tasks.map((item: Task) =>\n        item.day === day ? (\n          <TodoItem\n            id={item.id}\n            text={item.text}\n            key={item.id}\n            done={item.done}\n          />\n        ) : (\n          <></>\n        ),\n      )}\n    </Container>\n  );\n};\n\nexport default Day;\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  margin-top: 20px;\n  min-height: 1000px;\n  justify-content: center;\n`;\n","import React from 'react';\nimport { days } from '../../Assets/json/days';\nimport Day from '../Day/day';\nimport { Container } from './week_styles';\n\nconst Week = () => {\n  return (\n    <Container data-testid=\"day-container\">\n      {days.map((item) => (\n        <Day key={item} day={item} />\n      ))}\n    </Container>\n  );\n};\n\nexport default Week;\n","import React, { useState } from 'react';\nimport { smartReloadContext } from './smartReload';\nimport { ProviderProps } from '../../Types/index';\n\nconst SmartReloadProvider = ({ children }: ProviderProps) => {\n  const [reloadSwitch, setReloadSwitch] = useState<number>(0);\n\n  const Load = () => {\n    setReloadSwitch((prev) => prev + 1);\n  };\n\n  return (\n    <smartReloadContext.Provider value={{ reloadSwitch, Load }}>\n      {children}\n    </smartReloadContext.Provider>\n  );\n};\n\nexport default SmartReloadProvider;\n","import GlobalStyle from './Global/global_styles';\nimport React from 'react';\nimport Header from './Components/Header/header';\nimport Week from './Components/Week/week';\nimport SmartReloadProvider from './Context/smartReload/provider';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToastContainer position=\"bottom-right\" />\n      <SmartReloadProvider>\n        <Header />\n        <Week />\n      </SmartReloadProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}